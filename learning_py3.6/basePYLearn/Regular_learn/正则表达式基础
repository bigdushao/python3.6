数量词的贪婪模式与非贪婪模式
反斜杠的困扰
    正则表达式里使用"\"作为转义字符，这就可能造成反斜杠困扰。
    假如你需要匹配文本中的字符"\"，那么使用编程语言表示的正则表达式里将需要4个反斜杠"\\\\"：
    前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。
    Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r"\\"表示。
    同样，匹配一个数字的"\\d"可以写成r"\d"。
    有了原生字符串，你再也不用担心是不是漏写了反斜杠，写出来的表达式也更直观。
匹配模式:
    正则表达式提供了一些可用的匹配模式，忽略大小写，多行匹配等